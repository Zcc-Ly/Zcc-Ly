<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="st.dao.SQMapper">
  <resultMap id="BaseResultMap" type="st.bean.SQ">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="SQ_sId" jdbcType="INTEGER" property="sqSid" />
    <result column="SQ_stID" jdbcType="INTEGER" property="sqStid" />
    <result column="zt" jdbcType="INTEGER" property="zt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, SQ_sId, SQ_stID, zt
  </sql>
  <select id="selectByExample" parameterType="st.bean.SQExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stustsq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stustsq
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectBystId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stustsq
    where SQ_stID = #{SQ_stID,jdbcType=INTEGER} and zt = 0;
   </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stustsq
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="st.bean.SQExample">
    delete from stustsq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="st.bean.SQ">
    insert into stustsq (id, SQ_sId, SQ_stID, 
      zt)
    values (#{id,jdbcType=INTEGER}, #{sqSid,jdbcType=INTEGER}, #{sqStid,jdbcType=INTEGER}, 
      #{zt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="st.bean.SQ">
    insert into stustsq
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sqSid != null">
        SQ_sId,
      </if>
      <if test="sqStid != null">
        SQ_stID,
      </if>
      <if test="zt != null">
        zt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sqSid != null">
        #{sqSid,jdbcType=INTEGER},
      </if>
      <if test="sqStid != null">
        #{sqStid,jdbcType=INTEGER},
      </if>
      <if test="zt != null">
        #{zt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="st.bean.SQExample" resultType="java.lang.Long">
    select count(*) from stustsq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
 
  <update id="updateByExampleSelective" parameterType="map">
    update stustsq
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sqSid != null">
        SQ_sId = #{record.sqSid,jdbcType=INTEGER},
      </if>
      <if test="record.sqStid != null">
        SQ_stID = #{record.sqStid,jdbcType=INTEGER},
      </if>
      <if test="record.zt != null">
        zt = #{record.zt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stustsq
    set id = #{record.id,jdbcType=INTEGER},
      SQ_sId = #{record.sqSid,jdbcType=INTEGER},
      SQ_stID = #{record.sqStid,jdbcType=INTEGER},
      zt = #{record.zt,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="st.bean.SQ">
    update stustsq
    <set>
      <if test="sqSid != null">
        SQ_sId = #{sqSid,jdbcType=INTEGER},
      </if>
      <if test="sqStid != null">
        SQ_stID = #{sqStid,jdbcType=INTEGER},
      </if>
      <if test="zt != null">
        zt = #{zt,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="st.bean.SQ">
    update stustsq
    set SQ_sId = #{sqSid,jdbcType=INTEGER},
      SQ_stID = #{sqStid,jdbcType=INTEGER},
      zt = #{zt,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>